void swap_pointers(char* x, char* y) <- This is pass-by-pointers of char*, which mean as a pointers, this is pass-by-value
{
   char *tmp;
   tmp = x;
   x = y;
   y = tmp;
}
int main()
{
   char a[] = "I should print second";
   char b[] = "I should print first";

   char *s1 = a;
   char *s2 = b; <-- These are pointers
   swap_pointers(s1,s2); <-- The value of s1,s2 remain unchanged
   cout << "s1 is " << s1 << endl;
   cout << "s2 is " << s2 << endl;
   return 0;
}
================================================================================================================================
int main()  { 
   char **s; <-- Uninitialized pointer ||=> char *s; (this may fix it)
   char foo[] = "Hello World"; 
   *s = foo; <-- Trying to allocate a uninitialized pointer *face palm*
   printf("s is %s\n",s); <-- s has the type of char* but still not guranteed as Null-Terminated char* 
   s[0] = foo; 
   printf("s[0] is %s\n",s[0]); 
   return(0); 
}
