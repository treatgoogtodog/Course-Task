void swap_pointers(char* x, char* y) <- This is pass-by-pointers of char*, which mean as a pointers, this is pass-by-value
{
   char *tmp;
   tmp = x;
   x = y;
   y = tmp;
}
int main()
{
   char a[] = "I should print second";
   char b[] = "I should print first";

   char *s1 = a;
   char *s2 = b; <-- These are pointers
   swap_pointers(s1,s2); <-- The value of s1,s2 remain unchanged
   cout << "s1 is " << s1 << endl;
   cout << "s2 is " << s2 << endl;
   return 0;
}
================================================================================================================================
int main()  { 
   char **s; <-- Uninitialized pointer ||=> char *s; (this may fix it)
   char foo[] = "Hello World"; 
   *s = foo; <-- Trying to allocate a uninitialized pointer *face palm*
   printf("s is %s\n",s); <-- s has the type of char* but still not guranteed as Null-Terminated char* 
   s[0] = foo; 
   printf("s[0] is %s\n",s[0]); 
   return(0); 
}

================================================================================================================================
Phần câu hỏi
Cho đoạn lệnh sau.
char c = ‘A', d = ‘B';
char* p1 = &c;
char* p2 = &d;
char* p3;
Giả sử địa chỉ của c là 0x1234, địa chỉ của b(đây có thể là 'd') là 0x5678. Hỏi output của đoạn lệnh sau là gì?
p3 = &d;
cout << “*p3 = “ << *p3 << “, p3 = “ << p3 << endl; ==> "*p3 = 0x5678, p3 = B"
p3 = p1;
cout << “*p3 = “ << *p3 << “, p3 = “ << p3 << endl; ==> "*p3 = 0x1234, p3 = A"
*p1 = *p2;
cout << “*p1 = “ << *p1 << “, p1 = “ << p1 << endl; ==> "*p1 = 0x5678, p1 = B"


Cho các lệnh sau.
int *p;
int i;
int k;
i = 4;
k = i;
p = &i;

(Những) lệnh nào trong số các lệnh dưới đây sẽ gán cho i giá trị 5?
k = 5; <Gán k = 5, không ảnh hưởng đến i>
*k = 5; <Gán *k = 5, có thể gẫy lỗi [Segment Fault]>
p = 5; <Gán cho ô nhớ tại địa chỉ của &i giá trị 5, hay gán i = 5>

